# se corre en la terminal (acuerdense de abrir mongo en coker)

docker exec -it my-mongo mongosh -u root -p example --authenticationDatabase admin

-> Ahora en la terminal les deberia de salir algo como test> ahi es donde se va a trabajar el resto

#Crear el esquema con el que se va a trabajar 

use dataSetDB

/// correxion db.dropDatabase();

#crear tabla

db.createCollection("dataset", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["Nombre", "Descripción", "Fecha de Inclusión", "Foto o avatar", "Archivo(s)","OwnerId", "Video"],
         properties: {
            Nombre: {
               bsonType: "string",
               description: "Nombre of the dataset"
            },
            DatasetId: {
               bsonType: "int",
               description: "Numero de dataset"
            },
            Descripción: {
               bsonType: "string",
               description: "Description of the dataset"
            },
            "Fecha de Inclusión": {
               bsonType: "date",
               description: "Date of inclusion of the dataset"
            },
            "Foto o avatar": {
               bsonType: ["string", "null"],
               description: "URL or path to the photo or avatar associated with the dataset"
            },
            "Archivo(s)": {
               bsonType: ["string", "array"],
               description: "URLs or paths to the file(s) containing the dataset data"
            },
            "OwnerId": {
               bsonType: "int",
               description: "Numero de posteador"
            },
            "Video": {
               bsonType: "string",
               description: "Patch del video"
            }
            
         }
      }
   }
});



#ok ahora hacemos una funcion para sacar datos modo serio

function insertDataset(nombre, dataId, descripcion, fotoAvatar, archivos, idowner, strVideo) {
    // Create a new document to insert
    var datasetDocument = {
        "Nombre": nombre,
        "DatasetId": dataId,
        "Descripción": descripcion,
        "Fecha de Inclusión": new Date(),
        "Foto o avatar": fotoAvatar,
        "Archivo(s)": archivos,
        "OwnerId": idowner,
        "Video": strVideo
    };

    // Insert the document into the "dataset" collection
    db.dataset.insertOne(datasetDocument);
}


#ahora a probarlo uwu 

insertDataset("Prueba bonita", 1, "ay pero que locura", "imagenes\\buscar.png", ["video\\duck-drums.mp4"],1,"video\\duck-drums.mp4");
insertDataset("Prueba bonita", 2, "ay pero que locura", "imagenes\\perfil1.png", ["video\\duck-drums.mp4"],1,"video\\duck-drums.mp4");

db.dataset.find()

#OH WAO YA SIRVEN LOS INSERTS pero que bendicioooon, ahora trabajmos con la funcion para sacar la info

function getDatasetInfo(idowner) {
    return db.dataset.find({ "OwnerId": idowner }).toArray();
}
#hora vamos a porbar esto

var datasetInfo = getDatasetInfo(1);
printjson(datasetInfo);


db.createCollection("dataSetComment", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["idDataset", "idUsuarioComment", "comentario"],
            properties: {
                idDataset: {
                    bsonType: "int",
                    description: "ID del dataset al que pertenece el comentario"
                },
                idUsuarioComment: {
                    bsonType: "int",
                    description: "ID del usuario que realiza el comentario"
                },
                comentario: {
                    bsonType: "string",
                    description: "Texto del comentario"
                }
            }
        }
    }
})


function insertDatasetComment(idDataset, idUsuarioComment, comentario) {
    db.dataSetComment.insertOne({
        "idDataset": idDataset,
        "idUsuarioComment": idUsuarioComment,
        "comentario": comentario
    });
}

insertDatasetComment(1, 2, "Este es un comentario sobre el dataset 1.");

function getDatasetComments(idDataset) {
    return db.dataSetComment.find({"idDataset": idDataset}).toArray();
}